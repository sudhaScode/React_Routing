{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\React_Projects\\\\React_Routing\\\\frontend\\\\src\\\\Pages\\\\Events.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport EventsList from \"./EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  const [fetchedEvents, setFetchedEvents] = useState();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState();\n  useEffect(() => {\n    async function fetchEvents() {\n      setLoading(true);\n      try {\n        const response = await fetch('http://localhost:8080/events');\n        if (!response.ok) {\n          setError(\"Fetching events got failed\");\n        } else {\n          const resData = await response.json();\n          //console.log(\"event \"+ JSON.stringify(resData.events) || \"no event\");\n          setFetchedEvents(resData.events);\n        }\n      } catch (error) {\n        // console.error(\"Error fetching events:\", error);\n        setError(\"An error occurred while fetching events\");\n      }\n      setLoading(false);\n    }\n    fetchEvents();\n  }, []);\n  const events = useLoaderData();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: fetchedEvents\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n/**<div style={{textAlign: 'center'}}>     \r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n\r\n    </div> \r\n    {!loading && <EventsList events = {fetchedEvents}/>}*/\n_s(EventsPage, \"zasCYK/IWOXWm4+7SZOHhbRFjR8=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["useState","useEffect","EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","fetchedEvents","setFetchedEvents","loading","setLoading","error","setError","fetchEvents","response","fetch","ok","resData","json","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/React_Projects/React_Routing/frontend/src/Pages/Events.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport EventsList from \"./EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\n\r\nfunction EventsPage(){\r\n  const [fetchedEvents, setFetchedEvents] = useState();\r\n const [loading, setLoading] =  useState(false);\r\n const [error,setError] = useState();\r\n\r\nuseEffect(()=>{\r\n    async function fetchEvents(){\r\n        setLoading(true);\r\n     try{\r\n        const response = await fetch('http://localhost:8080/events');\r\n        \r\n        if(!response.ok){\r\n            setError(\"Fetching events got failed\");\r\n        }\r\n        else{\r\n            const resData = await response.json();\r\n            //console.log(\"event \"+ JSON.stringify(resData.events) || \"no event\");\r\n            setFetchedEvents(resData.events);\r\n        }\r\n    }\r\n    catch(error){\r\n       // console.error(\"Error fetching events:\", error);\r\n        setError(\"An error occurred while fetching events\");\r\n    }\r\n        setLoading(false);\r\n        \r\n    }\r\n    fetchEvents();\r\n }, []);\r\n const events = useLoaderData();\r\n return(\r\n    <>\r\n    <EventsList events={fetchedEvents}/>\r\n    </>\r\n );\r\n\r\n}\r\n/**<div style={{textAlign: 'center'}}>     \r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n\r\n    </div> \r\n    {!loading && <EventsList events = {fetchedEvents}/>}*/\r\nexport default EventsPage;\r\n\r\nexport async function loader(){\r\n    const response = await fetch('http://localhost:8080/events');\r\n    \r\n    if(!response.ok){\r\n      //\r\n    }\r\n    else{\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjD,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACnB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAAC,CAAC;EACrD,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAIb,QAAQ,CAAC,KAAK,CAAC;EAC9C,MAAM,CAACc,KAAK,EAACC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC;EAEpCC,SAAS,CAAC,MAAI;IACV,eAAee,WAAWA,CAAA,EAAE;MACxBH,UAAU,CAAC,IAAI,CAAC;MACnB,IAAG;QACA,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;QAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;UACZJ,QAAQ,CAAC,4BAA4B,CAAC;QAC1C,CAAC,MACG;UACA,MAAMK,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;UACrC;UACAV,gBAAgB,CAACS,OAAO,CAACE,MAAM,CAAC;QACpC;MACJ,CAAC,CACD,OAAMR,KAAK,EAAC;QACT;QACCC,QAAQ,CAAC,yCAAyC,CAAC;MACvD;MACIF,UAAU,CAAC,KAAK,CAAC;IAErB;IACAG,WAAW,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,MAAMM,MAAM,GAAGnB,aAAa,CAAC,CAAC;EAC9B,oBACGE,OAAA,CAAAE,SAAA;IAAAgB,QAAA,eACAlB,OAAA,CAACH,UAAU;MAACoB,MAAM,EAAEZ;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAClC,CAAC;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AALAlB,EAAA,CArCSD,UAAU;EAAA,QA6BHL,aAAa;AAAA;AAAAyB,EAAA,GA7BpBpB,UAAU;AA2CnB,eAAeA,UAAU;AAEzB,OAAO,eAAeqB,MAAMA,CAAA,EAAE;EAC1B,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;EAAA,CACD,MACG;IACA,MAAMC,OAAO,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IACrC,OAAOD,OAAO,CAACE,MAAM;EACzB;AACJ;AAAC,IAAAM,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}