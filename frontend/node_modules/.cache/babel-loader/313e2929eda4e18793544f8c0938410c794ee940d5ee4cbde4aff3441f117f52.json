{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\React_Projects\\\\React_Routing\\\\frontend\\\\src\\\\Pages\\\\Events.js\",\n  _s = $RefreshSig$();\n//import { useState, useEffect } from \"react\";\nimport EventsList from \"./EventsList\";\nimport { useLoaderData } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventsPage() {\n  _s();\n  /*const [fetchedEvents, setFetchedEvents] = useState();\r\n  const [loading, setLoading] =  useState(false);\r\n  const [error,setError] = useState();\r\n  useEffect(()=>{\r\n    async function fetchEvents(){\r\n        setLoading(true);\r\n     try{\r\n        const response = await fetch('http://localhost:8080/events');\r\n        \r\n        if(!response.ok){\r\n            setError(\"Fetching events got failed\");\r\n        }\r\n        else{\r\n            const resData = await response.json();\r\n            console.log(\"event \"+ JSON.stringify(resData.events) || \"no event\");\r\n            setFetchedEvents(resData.events);\r\n        }\r\n    }\r\n    catch(error){\r\n        console.error(\"Error fetching events:\", error);\r\n        setError(\"An error occurred while fetching events\");\r\n    }\r\n        setLoading(false);\r\n        \r\n    }\r\n    fetchEvents();\r\n  }, []);*/\n  const data = useLoaderData();\n  const events = data.events;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(EventsList, {\n      events: events\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n/**<div style={{textAlign: 'center'}}>     \r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n\r\n    </div> \r\n    {!loading && <EventsList events = {fetchedEvents}/>}*/\n_s(EventsPage, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = EventsPage;\nexport default EventsPage;\nexport async function loader() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    //\n  } else {\n    //  const resData = await response.json();\n    return resData;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsPage\");","map":{"version":3,"names":["EventsList","useLoaderData","jsxDEV","_jsxDEV","Fragment","_Fragment","EventsPage","_s","data","events","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","response","fetch","ok","resData","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/React_Projects/React_Routing/frontend/src/Pages/Events.js"],"sourcesContent":["//import { useState, useEffect } from \"react\";\r\nimport EventsList from \"./EventsList\";\r\nimport { useLoaderData } from \"react-router-dom\";\r\n\r\n\r\nfunction EventsPage(){\r\n  /*const [fetchedEvents, setFetchedEvents] = useState();\r\n const [loading, setLoading] =  useState(false);\r\n const [error,setError] = useState();\r\n\r\nuseEffect(()=>{\r\n    async function fetchEvents(){\r\n        setLoading(true);\r\n     try{\r\n        const response = await fetch('http://localhost:8080/events');\r\n        \r\n        if(!response.ok){\r\n            setError(\"Fetching events got failed\");\r\n        }\r\n        else{\r\n            const resData = await response.json();\r\n            console.log(\"event \"+ JSON.stringify(resData.events) || \"no event\");\r\n            setFetchedEvents(resData.events);\r\n        }\r\n    }\r\n    catch(error){\r\n        console.error(\"Error fetching events:\", error);\r\n        setError(\"An error occurred while fetching events\");\r\n    }\r\n        setLoading(false);\r\n        \r\n    }\r\n    fetchEvents();\r\n }, []);*/\r\n const data = useLoaderData();\r\n const events = data.events;\r\n return(\r\n    <>\r\n    <EventsList events={events}/>\r\n    </>\r\n );\r\n\r\n}\r\n/**<div style={{textAlign: 'center'}}>     \r\n        {loading && <p>Loading...</p>}\r\n        {error && <p>{error}</p>}\r\n\r\n    </div> \r\n    {!loading && <EventsList events = {fetchedEvents}/>}*/\r\nexport default EventsPage;\r\n\r\nexport async function loader(){\r\n    const response = await fetch('http://localhost:8080/events');\r\n    \r\n    if(!response.ok){\r\n      //\r\n    }\r\n    else{\r\n      //  const resData = await response.json();\r\n        return resData;\r\n    }\r\n}"],"mappings":";;AAAA;AACA,OAAOA,UAAU,MAAM,cAAc;AACrC,SAASC,aAAa,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGjD,SAASC,UAAUA,CAAA,EAAE;EAAAC,EAAA;EACnB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EAEC,MAAMC,IAAI,GAAGP,aAAa,CAAC,CAAC;EAC5B,MAAMQ,MAAM,GAAGD,IAAI,CAACC,MAAM;EAC1B,oBACGN,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACAP,OAAA,CAACH,UAAU;MAACS,MAAM,EAAEA;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,gBAC3B,CAAC;AAGP;AACA;AACA;AACA;AACA;AACA;AACA;AALAP,EAAA,CAtCSD,UAAU;EAAA,QA6BLL,aAAa;AAAA;AAAAc,EAAA,GA7BlBT,UAAU;AA4CnB,eAAeA,UAAU;AAEzB,OAAO,eAAeU,MAAMA,CAAA,EAAE;EAC1B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,CAAC;EAE5D,IAAG,CAACD,QAAQ,CAACE,EAAE,EAAC;IACd;EAAA,CACD,MACG;IACF;IACE,OAAOC,OAAO;EAClB;AACJ;AAAC,IAAAL,EAAA;AAAAM,YAAA,CAAAN,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}