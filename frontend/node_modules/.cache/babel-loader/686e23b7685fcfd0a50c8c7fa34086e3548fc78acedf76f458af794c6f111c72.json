{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\React_Projects\\\\React_Routing\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, useNavigation, useActionData, json, redirect } from 'react-router-dom';\nimport Page from '../UI/Page';\n//import { useState } from 'react';\nimport { Form } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  // const [title, setTitle] = useState();\n  // const [image, setImage] = useState();\n  // const [date, setDate] = useState();\n  // const [description, setDescription] = useState();\n\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const data = useActionData();\n  function cancelHandler() {\n    navigate('..');\n  }\n  const isSubmitting = navigation.state === 'submitting';\n  /*function inputHandler(key, value){\n    if(key === 'title'){\n      setTitle(value);\n     }\n    else if(key === 'image'){\n        setImage(value);\n    }\n    else if(key === date){\n          setDate(value);\n    }\n    else{\n      setDescription(value);\n    }\n   }\n  function submitEventHandler(event){\n     event.preventDefault();\n     const newEvent={\n      title: title,\n      image: image,\n      date: date,\n      description, description\n     }\n     \n     console.log(newEvent)\n     navigate(\"..\");\n     setDate();\n     setDescription();\n     setImage()\n     setTitle()\n  }\n  */\n  return /*#__PURE__*/_jsxDEV(Page, {\n    className: classes.data,\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      method: method,\n      className: classes.form,\n      children: [data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          color: 'red'\n        },\n        children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: err\n        }, err, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"title\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"title\",\n          type: \"text\",\n          name: \"title\",\n          required: true,\n          defaultValue: event ? event.title : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          type: \"url\",\n          name: \"image\",\n          required: true,\n          defaultValue: event ? event.image : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"date\",\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"date\",\n          type: \"date\",\n          name: \"date\",\n          required: true,\n          defaultValue: event ? event.date : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"description\",\n          children: \"Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"description\",\n          name: \"description\",\n          rows: \"5\",\n          required: true,\n          defaultValue: event ? event.description : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: cancelHandler,\n          disabled: isSubmitting,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: isSubmitting,\n          children: isSubmitting ? 'Submitting...' : 'Save'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"Uq3UEL5GWdmfvqFbTKM5sZxC7Cc=\", false, function () {\n  return [useNavigate, useNavigation, useActionData];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  };\n  console.log(eventData);\n  let url = 'http://localhost:8080/events';\n  if (method === 'patch') {\n    const eventid = params.eventid;\n    url = 'http://localhost:8080/events/' + eventid;\n  }\n  const response = await fetch(url, {\n    method: request.method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      title: \"Server is not responding\",\n      message: \"Data can't sent\"\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["useNavigate","useNavigation","useActionData","json","redirect","Page","Form","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","navigate","navigation","data","cancelHandler","isSubmitting","state","className","children","form","errors","style","color","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","formData","eventData","get","console","log","url","eventid","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/React_Projects/React_Routing/frontend/src/components/EventForm.js"],"sourcesContent":["import { useNavigate,useNavigation, useActionData, json, redirect} from 'react-router-dom';\n\nimport Page from '../UI/Page';\n//import { useState } from 'react';\nimport { Form } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event}) {\n  // const [title, setTitle] = useState();\n  // const [image, setImage] = useState();\n  // const [date, setDate] = useState();\n  // const [description, setDescription] = useState();\n\n\n  const navigate = useNavigate();\n  const navigation = useNavigation();\n  const data = useActionData();\n  function cancelHandler() {\n    navigate('..');\n  } \n  const isSubmitting = navigation.state === 'submitting';\n  /*function inputHandler(key, value){\n    if(key === 'title'){\n      setTitle(value);\n\n    }\n    else if(key === 'image'){\n        setImage(value);\n    }\n    else if(key === date){\n          setDate(value);\n    }\n    else{\n      setDescription(value);\n    }\n\n  }\n  function submitEventHandler(event){\n     event.preventDefault();\n     const newEvent={\n      title: title,\n      image: image,\n      date: date,\n      description, description\n     }\n     \n     console.log(newEvent)\n     navigate(\"..\");\n     setDate();\n     setDescription();\n     setImage()\n     setTitle()\n  }\n*/\n  return (\n    <Page className={classes.data}>\n    <Form method = {method} className={classes.form} >\n      {data && data.errors &&(\n        <ul style={{color:'red'}}>\n          {Object.values(data.errors).map((err)=>(\n            <li key ={err}>{err}</li  >\n          ))}\n        </ul>\n      )}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required \n        defaultValue={event?event.title:\"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event?event.image:\"\"} \n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={event?event.date:\"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={event?event.description:\"\"} \n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>  \n          Cancel\n        </button>\n        <button disabled={isSubmitting}>\n          {isSubmitting ? 'Submitting...' : 'Save'}\n        </button>\n      </div>\n    </Form>\n    </Page>\n  );\n}\n\nexport default EventForm;\n\n\nexport async function action({request, params}){\n    const data = await request.formData();\n    const eventData = {\n      title: data.get('title'),\n      image: data.get('image'),\n      date: data.get('date'),\n      description: data.get('description')\n    }\n    console.log(eventData)\n    let url =   'http://localhost:8080/events';\n    if(method === 'patch'){\n      const eventid = params.eventid;\n      url ='http://localhost:8080/events/'+eventid;\n    }\nconst response = await fetch(url,  {\n  method:request.method,\n  headers: {'Content-Type': 'application/json'},\n  body: JSON.stringify(eventData),\n});\nif(response.status === 422){\n     return response;\n}\nif(!response.ok){\n  throw json({title:\"Server is not responding\",message:\"Data can't sent\" }, {status: 500} );\n}\nreturn redirect('/events');\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}