{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SUBOMMAS\\\\React_Projects\\\\React_Routing\\\\frontend\\\\src\\\\App.js\";\n// Challenge / Exercise\n\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport EventsPage from \"./Pages/EventsPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport { createBrowserRouter, RouterProvider } from 'react-router-dom';\nimport RootLayout from \"./RootLayout\";\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: '/',\n  element: /*#__PURE__*/_jsxDEV(RootLayout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 13\n  }, this),\n  Children: [{\n    path: '/',\n    element: /*#__PURE__*/_jsxDEV(HomePage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this)\n  }, {\n    path: 'events',\n    element: /*#__PURE__*/_jsxDEV(EventsPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }, this)\n  }, {\n    path: 'eventDetails',\n    element: /*#__PURE__*/_jsxDEV(EventDetailPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 34\n    }, this)\n  }, {\n    path: 'add',\n    element: /*#__PURE__*/_jsxDEV(NewEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this)\n  }, {\n    path: 'edit',\n    element: /*#__PURE__*/_jsxDEV(EditEventPage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 26\n    }, this)\n  }]\n}]);\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(RouterProvider, {\n    router: router\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 10\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["EditEventPage","EventDetailPage","EventsPage","HomePage","NewEventPage","createBrowserRouter","RouterProvider","RootLayout","jsxDEV","_jsxDEV","router","path","element","fileName","_jsxFileName","lineNumber","columnNumber","Children","App","_c","$RefreshReg$"],"sources":["C:/Users/SUBOMMAS/React_Projects/React_Routing/frontend/src/App.js"],"sourcesContent":["// Challenge / Exercise\n\nimport EditEventPage from \"./Pages/EditEventPage\";\nimport EventDetailPage from \"./Pages/EventDetailPage\";\nimport EventsPage from \"./Pages/EventsPage\";\nimport HomePage from \"./Pages/HomePage\";\nimport NewEventPage from \"./Pages/NewEventPage\";\nimport {createBrowserRouter, RouterProvider} from 'react-router-dom';\nimport RootLayout from \"./RootLayout\";\n\n// 1. Add five new (dummy) page components (content can be simple <h1> elements)\n//    - HomePage\n//    - EventsPage\n//    - EventDetailPage\n//    - NewEventPage\n//    - EditEventPage\n// 2. Add routing & route definitions for these five pages\n//    - / => HomePage\n//    - /events => EventsPage\n//    - /events/<some-id> => EventDetailPage\n//    - /events/new => NewEventPage\n//    - /events/<some-id>/edit => EditEventPage\n// 3. Add a root layout that adds the <MainNavigation> component above all page components\n// 4. Add properly working links to the MainNavigation\n// 5. Ensure that the links in MainNavigation receive an \"active\" class when active\n// 6. Output a list of dummy events to the EventsPage\n//    Every list item should include a link to the respective EventDetailPage\n// 7. Output the ID of the selected event on the EventDetailPage\n// BONUS: Add another (nested) layout route that adds the <EventNavigation> component above all /events... page components\n\nconst router = createBrowserRouter(\n  [{\n    path:'/',\n    element:<RootLayout/>,\n    Children:\n  [\n  {path:'/', element: <HomePage/>},\n  {path: 'events', element: <EventsPage/>},\n  {path: 'eventDetails', element:<EventDetailPage/>},\n  {path:'add', element:<NewEventPage/>},  \n  {path: 'edit', element:<EditEventPage/>}],\n},\n]);\n\nfunction App() {\n  return <RouterProvider router= {router}/>\n}\n\nexport default App;\n"],"mappings":";AAAA;;AAEA,OAAOA,aAAa,MAAM,uBAAuB;AACjD,OAAOC,eAAe,MAAM,yBAAyB;AACrD,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,YAAY,MAAM,sBAAsB;AAC/C,SAAQC,mBAAmB,EAAEC,cAAc,QAAO,kBAAkB;AACpE,OAAOC,UAAU,MAAM,cAAc;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,MAAM,GAAGL,mBAAmB,CAChC,CAAC;EACCM,IAAI,EAAC,GAAG;EACRC,OAAO,eAACH,OAAA,CAACF,UAAU;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;EACrBC,QAAQ,EACV,CACA;IAACN,IAAI,EAAC,GAAG;IAAEC,OAAO,eAAEH,OAAA,CAACN,QAAQ;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAChC;IAACL,IAAI,EAAE,QAAQ;IAAEC,OAAO,eAAEH,OAAA,CAACP,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACxC;IAACL,IAAI,EAAE,cAAc;IAAEC,OAAO,eAACH,OAAA,CAACR,eAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EAClD;IAACL,IAAI,EAAC,KAAK;IAAEC,OAAO,eAACH,OAAA,CAACL,YAAY;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC,EACrC;IAACL,IAAI,EAAE,MAAM;IAAEC,OAAO,eAACH,OAAA,CAACT,aAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC;EAAC,CAAC;AAC1C,CAAC,CACA,CAAC;AAEF,SAASE,GAAGA,CAAA,EAAG;EACb,oBAAOT,OAAA,CAACH,cAAc;IAACI,MAAM,EAAGA;EAAO;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAC3C;AAACG,EAAA,GAFQD,GAAG;AAIZ,eAAeA,GAAG;AAAC,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}